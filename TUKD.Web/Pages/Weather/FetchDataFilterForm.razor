<MudDialog>
    <DialogContent>
        <EditForm Model="Model"
                  id="form"
                  OnSubmit="OnSubmit">
            <MudSelect T="string"
                       Label="Summary"
                       Class="my-1"
                       @bind-Value="Model.Summary"
                       For="() => Model.Summary"
                       Variant="Variant.Outlined" Margin="Margin.Dense">
                @foreach (var item in _summaries)
                {
                    <MudSelectItem Value="item" />
                }

            </MudSelect>
            <MudSelect T="int" Label="Temp (C)" @bind-Value="Model.TemperatureC" For="() => Model.TemperatureC" Variant="Variant.Outlined" Margin="Margin.Dense">
               @foreach (var item in _tempCDict)
               {
                   <MudSelectItem Value="item.Key">@item.Value</MudSelectItem>
               }
            </MudSelect>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnCancel">Cancel</MudButton>
        <MudButton form="form"
                   Class="mr-4"
                   Variant="Variant.Filled"
                   ButtonType="ButtonType.Submit"
                   Color="Color.Primary">
            Submit
        </MudButton>
    </DialogActions>
</MudDialog>

@code
{
    readonly List<string> _summaries = new() { "- None -", "Balmy", "Bracing", "Chilly", "Freezing" };

    readonly Dictionary<int, string> _tempCDict = new()
    {
        [0] = "- None -",
        [23] = "23"
    };


    [CascadingParameter]
    public MudDialogInstance? MudDialogInstance { get; set; }

    public WeatherForecast Model { get; set; } = new();

    void OnCancel() => MudDialogInstance?.Cancel();

    void OnSubmit() => MudDialogInstance?.Close(Model);
}
